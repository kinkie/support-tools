#!/bin/bash
# args: --force, --build
# compilers: --clang, --icc

opt=$(getopt --longoptions force,build,clang,icc,no-ccache,log:,help,ring --options fbcinl:hr -- "$@")

if [ $? != 0 ] ; then echo "Problem parsing options; terminating" >&2 ; exit 1 ; fi
eval set -- "$opt"

while true; do
  case "$1" in
    -f|--force) force_bootstrap="yes"; shift;;
    -b|--build) do_build="yes"; shift;;
    -c|--clang) CC="clang"; CXX="clang++"; shift;;
    -i|--icc) CC="icc"; CXX="icpc"; shift;;
    -n|--no-ccache) ccache="no"; shift;;
    -l|--log) logfile="$2" ; shift 2;;
    -h|--help) echo "options: force,build,clang,icc,log:file,help"; exit 0;;
    -r|--ring) do_ring=true; shift;;
    --) shift; break;;
    *) echo "internal error"; exit 1;;
  esac
done
if [ -n $logfile ]; then
  exec > >(tee $logfile)
  exec 2>&1
fi

DISTCHECK_CONFIGURE_FLAGS=" \
        --enable-loadable-modules \
        --enable-gnuregex \
        --enable-optimizations \
        --enable-inline \
        --enable-debug-cbdata \
        --enable-xmalloc-statistics \
        --enable-async-io \
        --enable-storeio \
        --enable-disk-io \
        --enable-removal-policies \
        --enable-icmp \
        --enable-delay-pools \
        --enable-icap-client \
        --enable-useragent-log \
        --enable-referer-log \
        --enable-wccp \
        --enable-wccpv2 \
        --enable-kill-parent-hack \
        --enable-snmp \
        --enable-cachemgr-hostname \
        --enable-eui \
        --enable-htcp \
        --enable-ssl \
        --enable-forw-via-db \
        --enable-cache-digests \
        --enable-poll \
        --enable-select \
        --enable-http-violations \
        --enable-ipfw-transparent \
        --enable-leakfinder \
        --enable-follow-x-forwarded-for \
        --enable-ident-lookups \
        --enable-internal-dns \
        --enable-default-hostsfile \
        --enable-auth \
        --enable-basic-auth-helpers \
        --enable-ntlm-auth-helpers \
        --enable-negotiate-auth-helpers \
        --enable-digest-auth-helpers \
        --enable-ntlm-fail-open \
        --enable-external-acl-helpers \
        --enable-url-rewrite-helpers \
        --enable-mempools \
        --enable-unlinkd \
        --enable-stacktraces \
        --enable-vary \
        --enable-x-accelerator-vary \
        --enable-ipv6 \
        --enable-auto-locale \
        --enable-translation \
        --enable-zph-qos \
        --enable-esi \
        --with-aio \
        --with-build-environment=default \
        --with-dl \
        --with-dns-cname \
        --with-gnu-ld \
        --with-ipv6-split-stack \
        --with-large-files \
        --with-pic \
        --with-pthreads \
        --enable-ssl-crtd \
        "

case "$CC" in
*clang) ;;
*)
DISTCHECK_CONFIGURE_FLAGS="$DISTCHECK_CONFIGURE_FLAGS \
	--enable-ecap=yes \
	"
esac

if [ -n "$CC" -a "x$ccache" != "xno" ]; then
  CC="ccache $CC"
  CXX="ccache $CXX"
fi
if [ ! -e ./configure -o "x$force_bootstrap" = "xyes" ]; then
  ./bootstrap.sh
fi

test -n "$CC" && export CC CXX
./configure --cache-file=/tmp/config.cache $DISTCHECK_CONFIGURE_FLAGS --prefix=$HOME/squid/install --without-netfilter-conntrack --disable-build-info

if [ $? -eq 0 -a "x$do_build" = "xyes" ]; then
  make all check
fi

if [ "$do_ring" = "true" ]; then
  echo -n ""
fi
